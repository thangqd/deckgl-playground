{"version":3,"sources":["../../../src/mvt-layer/mvt-layer.js"],"names":["WORLD_SIZE","defaultProps","uniqueIdProperty","type","value","highlightedFeatureId","loaders","MVTWorkerLoader","binary","MVTLayer","setState","data","tileJSON","props","oldProps","context","changeFlags","dataChanged","_updateTileData","state","_setWGS84PropertyForTiles","onDataLoad","fetch","propName","layer","raiseError","tilejson","tiles","opts","Number","isFinite","minzoom","minZoom","maxzoom","maxZoom","tile","url","Promise","reject","loadOptions","getLoadOptions","signal","x","y","z","mimeType","mvt","coordinates","viewport","resolution","tileIndex","gis","format","worldScale","Math","pow","xScale","yScale","xOffset","yOffset","modelMatrix","Matrix4","scale","autoHighlight","coordinateOrigin","coordinateSystem","COORDINATE_SYSTEM","CARTESIAN","extensions","ClipExtension","subLayers","GeoJsonLayer","log","warn","info","hoveredFeatureId","hoveredFeatureLayerName","hoveredFeature","object","newHoveredFeatureId","newHoveredFeatureLayerName","getFeatureUniqueId","getFeatureLayerName","params","isWGS84","index","sourceLayer","globalFeatureId","transformTileCoordsToWGS84","bbox","isHighlighted","isFeatureIdDefined","isFeatureIdPresent","featureIdToHighlight","Array","isArray","findIndex","feature","isMatchingId","isMatchingLayer","featureIdIndex","geometries","geometry","featureIds","undefined","maxObjects","deck","width","height","layerIds","id","pickObjects","maxFeatures","features","_pickObjects","featureCache","Set","renderedFeatures","f","featureId","push","has","add","tileset","selectedTiles","forEach","hasOwnProperty","Object","defineProperty","get","content","length","_contentWGS84","map","TileLayer","properties","layerName","wgs84Geom"],"mappings":"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","sourcesContent":["import {log} from '@deck.gl/core';\nimport {Matrix4} from 'math.gl';\nimport {MVTWorkerLoader} from '@loaders.gl/mvt';\nimport {binaryToGeojson} from '@loaders.gl/gis';\nimport {COORDINATE_SYSTEM} from '@deck.gl/core';\nimport {_findIndexBinary} from '@deck.gl/layers';\nimport {ClipExtension} from '@deck.gl/extensions';\n\nimport TileLayer from '../tile-layer/tile-layer';\nimport {getURLFromTemplate, isURLTemplate} from '../tile-layer/utils';\nimport {transform} from './coordinate-transform';\n\nimport {GeoJsonLayer} from '@deck.gl/layers';\n\nconst WORLD_SIZE = 512;\n\nconst defaultProps = {\n  uniqueIdProperty: {type: 'string', value: ''},\n  highlightedFeatureId: null,\n  loaders: [MVTWorkerLoader],\n  binary: false\n};\n\nexport default class MVTLayer extends TileLayer {\n  initializeState() {\n    super.initializeState();\n    this.setState({\n      data: null,\n      tileJSON: null\n    });\n  }\n\n  get isLoaded() {\n    return this.state.data && this.state.tileset && super.isLoaded;\n  }\n\n  updateState({props, oldProps, context, changeFlags}) {\n    if (changeFlags.dataChanged) {\n      this._updateTileData();\n    }\n\n    if (this.state.data) {\n      super.updateState({props, oldProps, context, changeFlags});\n      this._setWGS84PropertyForTiles();\n    }\n  }\n\n  /* eslint-disable complexity */\n  async _updateTileData() {\n    let {data} = this.props;\n    let tileJSON = null;\n\n    if (typeof data === 'string' && !isURLTemplate(data)) {\n      const {onDataLoad, fetch} = this.props;\n      this.setState({data: null, tileJSON: null});\n      try {\n        tileJSON = await fetch(data, {propName: 'data', layer: this, loaders: []});\n      } catch (error) {\n        this.raiseError(error, 'loading TileJSON');\n        data = null;\n      }\n\n      if (onDataLoad) {\n        onDataLoad(tileJSON);\n      }\n    } else if (data.tilejson) {\n      tileJSON = data;\n    }\n\n    if (tileJSON) {\n      data = tileJSON.tiles;\n    }\n\n    this.setState({data, tileJSON});\n  }\n\n  _getTilesetOptions(props) {\n    const opts = super._getTilesetOptions(props);\n    const {tileJSON} = this.state;\n\n    if (tileJSON) {\n      if (Number.isFinite(tileJSON.minzoom) && tileJSON.minzoom > props.minZoom) {\n        opts.minZoom = tileJSON.minzoom;\n      }\n\n      if (\n        Number.isFinite(tileJSON.maxzoom) &&\n        (!Number.isFinite(props.maxZoom) || tileJSON.maxzoom < props.maxZoom)\n      ) {\n        opts.maxZoom = tileJSON.maxzoom;\n      }\n    }\n    return opts;\n  }\n\n  /* eslint-disable complexity */\n\n  renderLayers() {\n    if (!this.state.data) return null;\n    return super.renderLayers();\n  }\n\n  getTileData(tile) {\n    const url = getURLFromTemplate(this.state.data, tile);\n    if (!url) {\n      return Promise.reject('Invalid URL');\n    }\n    let loadOptions = this.getLoadOptions();\n    const {binary, fetch} = this.props;\n    const {signal, x, y, z} = tile;\n    loadOptions = {\n      ...loadOptions,\n      mimeType: 'application/x-protobuf',\n      mvt: {\n        ...loadOptions?.mvt,\n        coordinates: this.context.viewport.resolution ? 'wgs84' : 'local',\n        tileIndex: {x, y, z}\n        // Local worker debug\n        // workerUrl: `modules/mvt/dist/mvt-loader.worker.js`\n        // Set worker to null to skip web workers\n        // workerUrl: null\n      },\n      gis: binary ? {format: 'binary'} : {}\n    };\n    return fetch(url, {propName: 'data', layer: this, loadOptions, signal});\n  }\n\n  renderSubLayers(props) {\n    const {tile} = props;\n    const worldScale = Math.pow(2, tile.z);\n\n    const xScale = WORLD_SIZE / worldScale;\n    const yScale = -xScale;\n\n    const xOffset = (WORLD_SIZE * tile.x) / worldScale;\n    const yOffset = WORLD_SIZE * (1 - tile.y / worldScale);\n\n    const modelMatrix = new Matrix4().scale([xScale, yScale, 1]);\n\n    props.autoHighlight = false;\n\n    if (!this.context.viewport.resolution) {\n      props.modelMatrix = modelMatrix;\n      props.coordinateOrigin = [xOffset, yOffset, 0];\n      props.coordinateSystem = COORDINATE_SYSTEM.CARTESIAN;\n      props.extensions = [...(props.extensions || []), new ClipExtension()];\n    }\n\n    const subLayers = super.renderSubLayers(props);\n\n    if (this.props.binary && !(subLayers instanceof GeoJsonLayer)) {\n      log.warn('renderSubLayers() must return GeoJsonLayer when using binary:true')();\n    }\n\n    return subLayers;\n  }\n\n  _updateAutoHighlight(info) {\n    const {uniqueIdProperty} = this.props;\n\n    const {hoveredFeatureId, hoveredFeatureLayerName} = this.state;\n    const hoveredFeature = info.object;\n    let newHoveredFeatureId;\n    let newHoveredFeatureLayerName;\n\n    if (hoveredFeature) {\n      newHoveredFeatureId = getFeatureUniqueId(hoveredFeature, uniqueIdProperty);\n      newHoveredFeatureLayerName = getFeatureLayerName(hoveredFeature);\n    }\n\n    if (\n      hoveredFeatureId !== newHoveredFeatureId ||\n      hoveredFeatureLayerName !== newHoveredFeatureLayerName\n    ) {\n      this.setState({\n        hoveredFeatureId: newHoveredFeatureId,\n        hoveredFeatureLayerName: newHoveredFeatureLayerName\n      });\n    }\n  }\n\n  getPickingInfo(params) {\n    const info = super.getPickingInfo(params);\n\n    const isWGS84 = this.context.viewport.resolution;\n\n    if (this.props.binary && info.index !== -1) {\n      const {data} = params.sourceLayer.props;\n      info.object = binaryToGeojson(data, {globalFeatureId: info.index});\n    }\n    if (info.object && !isWGS84) {\n      info.object = transformTileCoordsToWGS84(info.object, info.tile.bbox, this.context.viewport);\n    }\n\n    return info;\n  }\n\n  getHighlightedObjectIndex(tile) {\n    const {hoveredFeatureId, hoveredFeatureLayerName} = this.state;\n    const {uniqueIdProperty, highlightedFeatureId, binary} = this.props;\n    const {data} = tile;\n\n    const isHighlighted = isFeatureIdDefined(highlightedFeatureId);\n    const isFeatureIdPresent = isFeatureIdDefined(hoveredFeatureId) || isHighlighted;\n\n    if (!isFeatureIdPresent) {\n      return -1;\n    }\n\n    const featureIdToHighlight = isHighlighted ? highlightedFeatureId : hoveredFeatureId;\n\n    // Iterable data\n    if (Array.isArray(data)) {\n      return data.findIndex(feature => {\n        const isMatchingId = getFeatureUniqueId(feature, uniqueIdProperty) === featureIdToHighlight;\n        const isMatchingLayer =\n          isHighlighted || getFeatureLayerName(feature) === hoveredFeatureLayerName;\n        return isMatchingId && isMatchingLayer;\n      });\n\n      // Non-iterable data\n    } else if (data && binary) {\n      // Get the feature index of the selected item to highlight\n      const featureIdIndex = _findIndexBinary(data, uniqueIdProperty, featureIdToHighlight);\n\n      const geometries = ['points', 'lines', 'polygons'];\n      for (const geometry of geometries) {\n        const index = data[geometry] && data[geometry].featureIds.value[featureIdIndex];\n        if (index !== undefined) return index;\n      }\n    }\n\n    return -1;\n  }\n\n  _pickObjects(maxObjects) {\n    const {deck, viewport} = this.context;\n    const width = viewport.width;\n    const height = viewport.height;\n    const x = viewport.x;\n    const y = viewport.y;\n    const layerIds = [this.id];\n    return deck.pickObjects({x, y, width, height, layerIds, maxObjects});\n  }\n\n  getRenderedFeatures(maxFeatures = null) {\n    const features = this._pickObjects(maxFeatures);\n    const featureCache = new Set();\n    const renderedFeatures = [];\n\n    for (const f of features) {\n      const featureId = getFeatureUniqueId(f.object, this.props.uniqueIdProperty);\n\n      if (featureId === undefined) {\n        // we have no id for the feature, we just add to the list\n        renderedFeatures.push(f.object);\n      } else if (!featureCache.has(featureId)) {\n        // Add removing duplicates\n        featureCache.add(featureId);\n        renderedFeatures.push(f.object);\n      }\n    }\n\n    return renderedFeatures;\n  }\n\n  _setWGS84PropertyForTiles() {\n    const propName = 'dataInWGS84';\n    const {tileset} = this.state;\n\n    tileset.selectedTiles.forEach(tile => {\n      if (!tile.hasOwnProperty(propName)) {\n        // eslint-disable-next-line accessor-pairs\n        Object.defineProperty(tile, propName, {\n          get: () => {\n            // Still loading or encountered an error\n            if (!tile.content) {\n              return null;\n            }\n\n            if (this.props.binary && Array.isArray(tile.content) && !tile.content.length) {\n              // TODO: @loaders.gl/mvt returns [] when no content. It should return a valid empty binary.\n              // https://github.com/visgl/loaders.gl/pull/1137\n              return [];\n            }\n\n            if (tile._contentWGS84 === undefined) {\n              // Create a cache to transform only once\n              const content = this.props.binary ? binaryToGeojson(tile.content) : tile.content;\n              tile._contentWGS84 = content.map(feature =>\n                transformTileCoordsToWGS84(feature, tile.bbox, this.context.viewport)\n              );\n            }\n            return tile._contentWGS84;\n          }\n        });\n      }\n    });\n  }\n}\n\nfunction getFeatureUniqueId(feature, uniqueIdProperty) {\n  if (uniqueIdProperty) {\n    return feature.properties[uniqueIdProperty];\n  }\n\n  if ('id' in feature) {\n    return feature.id;\n  }\n\n  return undefined;\n}\n\nfunction getFeatureLayerName(feature) {\n  return feature.properties?.layerName || null;\n}\n\nfunction isFeatureIdDefined(value) {\n  return value !== undefined && value !== null && value !== '';\n}\n\nfunction transformTileCoordsToWGS84(object, bbox, viewport) {\n  const feature = {\n    ...object,\n    geometry: {\n      type: object.geometry.type\n    }\n  };\n\n  // eslint-disable-next-line accessor-pairs\n  Object.defineProperty(feature.geometry, 'coordinates', {\n    get: () => {\n      const wgs84Geom = transform(object.geometry, bbox, viewport);\n      return wgs84Geom.coordinates;\n    }\n  });\n\n  return feature;\n}\n\nMVTLayer.layerName = 'MVTLayer';\nMVTLayer.defaultProps = defaultProps;\n"],"file":"mvt-layer.js"}